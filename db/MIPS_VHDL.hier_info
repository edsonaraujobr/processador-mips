|MIPS_VHDL
clk => quartoBit~reg0.CLK
clk => terceiroBit~reg0.CLK
clk => segundoBit~reg0.CLK
clk => primeiroBit~reg0.CLK
clk => proximo_estado[0].CLK
clk => proximo_estado[1].CLK
clk => proximo_estado[2].CLK
clk => led_verde_g4~reg0.CLK
clk => led_verde_g5~reg0.CLK
clk => led_verde_g6~reg0.CLK
clk => led_verde_g7~reg0.CLK
clk => led_vermelho_r0~reg0.CLK
clk => estado[0]~reg0.CLK
clk => estado[1]~reg0.CLK
clk => estado[2]~reg0.CLK
clk => estado_atual[0].CLK
clk => estado_atual[1].CLK
clk => estado_atual[2].CLK
start_key3 => proximo_estado.OUTPUTSELECT
start_key3 => proximo_estado.OUTPUTSELECT
start_key3 => proximo_estado.OUTPUTSELECT
confirmar_valor_key2 => proximo_estado.OUTPUTSELECT
confirmar_valor_key2 => proximo_estado.OUTPUTSELECT
confirmar_valor_key2 => proximo_estado.OUTPUTSELECT
confirmar_valor_key2 => proximo_estado.OUTPUTSELECT
confirmar_valor_key2 => proximo_estado.OUTPUTSELECT
confirmar_valor_key2 => proximo_estado.OUTPUTSELECT
reset_key0 => proximo_estado.OUTPUTSELECT
reset_key0 => proximo_estado.OUTPUTSELECT
reset_key0 => proximo_estado.OUTPUTSELECT
reset_key0 => quartoBit~reg0.ENA
reset_key0 => terceiroBit~reg0.ENA
reset_key0 => segundoBit~reg0.ENA
reset_key0 => primeiroBit~reg0.ENA
reset_key0 => proximo_estado[0].ENA
reset_key0 => proximo_estado[1].ENA
reset_key0 => proximo_estado[2].ENA
reset_key0 => led_verde_g4~reg0.ENA
reset_key0 => led_verde_g5~reg0.ENA
reset_key0 => led_verde_g6~reg0.ENA
reset_key0 => led_verde_g7~reg0.ENA
reset_key0 => led_vermelho_r0~reg0.ENA
reset_key0 => estado[0]~reg0.ENA
reset_key0 => estado[1]~reg0.ENA
reset_key0 => estado[2]~reg0.ENA
led_verde_g7 <= led_verde_g7~reg0.DB_MAX_OUTPUT_PORT_TYPE
led_verde_g6 <= led_verde_g6~reg0.DB_MAX_OUTPUT_PORT_TYPE
led_verde_g5 <= led_verde_g5~reg0.DB_MAX_OUTPUT_PORT_TYPE
led_verde_g4 <= led_verde_g4~reg0.DB_MAX_OUTPUT_PORT_TYPE
led_vermelho_r0 <= led_vermelho_r0~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[0] <= primeiroBit~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[1] <= <VCC>
HEX3[2] <= <VCC>
HEX3[3] <= primeiroBit~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[4] <= primeiroBit~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[5] <= primeiroBit~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[6] <= <GND>
HEX2[0] <= segundoBit~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[1] <= <VCC>
HEX2[2] <= <VCC>
HEX2[3] <= segundoBit~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[4] <= segundoBit~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[5] <= segundoBit~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[6] <= <GND>
HEX1[0] <= terceiroBit~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[1] <= <VCC>
HEX1[2] <= <VCC>
HEX1[3] <= terceiroBit~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[4] <= terceiroBit~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[5] <= terceiroBit~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[6] <= <GND>
HEX0[0] <= quartoBit~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[1] <= <VCC>
HEX0[2] <= <VCC>
HEX0[3] <= quartoBit~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[4] <= quartoBit~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[5] <= quartoBit~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[6] <= <GND>
primeiroBit << primeiroBit~reg0.DB_MAX_OUTPUT_PORT_TYPE
segundoBit << segundoBit~reg0.DB_MAX_OUTPUT_PORT_TYPE
terceiroBit << terceiroBit~reg0.DB_MAX_OUTPUT_PORT_TYPE
quartoBit << quartoBit~reg0.DB_MAX_OUTPUT_PORT_TYPE
a[0] => Mux14.IN5
a[0] => alu_vhdl:alu.a[0]
a[1] => Mux13.IN4
a[1] => alu_vhdl:alu.a[1]
a[2] => Mux12.IN4
a[2] => alu_vhdl:alu.a[2]
a[3] => Mux11.IN4
a[3] => alu_vhdl:alu.a[3]
b[0] => Mux14.IN6
b[0] => alu_vhdl:alu.b[0]
b[1] => Mux13.IN5
b[1] => alu_vhdl:alu.b[1]
b[2] => Mux12.IN5
b[2] => alu_vhdl:alu.b[2]
b[3] => Mux11.IN5
b[3] => alu_vhdl:alu.b[3]
alu_ctrl[0] => Mux13.IN6
alu_ctrl[0] => alu_vhdl:alu.alu_control[0]
alu_ctrl[1] => Mux12.IN6
alu_ctrl[1] => alu_vhdl:alu.alu_control[1]
alu_ctrl[2] => Mux11.IN6
alu_ctrl[2] => alu_vhdl:alu.alu_control[2]
alu_result[0] << alu_vhdl:alu.alu_result[0]
alu_result[1] << alu_vhdl:alu.alu_result[1]
alu_result[2] << alu_vhdl:alu.alu_result[2]
alu_result[3] << alu_vhdl:alu.alu_result[3]
estado[0] <= estado[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
estado[1] <= estado[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
estado[2] <= estado[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|MIPS_VHDL|ALU_VHDL:alu
a[0] => Add0.IN8
a[0] => result.IN0
a[0] => result.IN0
a[0] => LessThan0.IN4
a[0] => Add1.IN4
a[1] => Add0.IN7
a[1] => result.IN0
a[1] => result.IN0
a[1] => LessThan0.IN3
a[1] => Add1.IN3
a[2] => Add0.IN6
a[2] => result.IN0
a[2] => result.IN0
a[2] => LessThan0.IN2
a[2] => Add1.IN2
a[3] => Add0.IN5
a[3] => result.IN0
a[3] => result.IN0
a[3] => LessThan0.IN1
a[3] => Add1.IN1
b[0] => result.IN1
b[0] => result.IN1
b[0] => LessThan0.IN8
b[0] => Add1.IN8
b[0] => Add0.IN4
b[1] => result.IN1
b[1] => result.IN1
b[1] => LessThan0.IN7
b[1] => Add1.IN7
b[1] => Add0.IN3
b[2] => result.IN1
b[2] => result.IN1
b[2] => LessThan0.IN6
b[2] => Add1.IN6
b[2] => Add0.IN2
b[3] => result.IN1
b[3] => result.IN1
b[3] => LessThan0.IN5
b[3] => Add1.IN5
b[3] => Add0.IN1
alu_control[0] => Mux0.IN10
alu_control[0] => Mux1.IN10
alu_control[0] => Mux2.IN10
alu_control[0] => Mux3.IN10
alu_control[1] => Mux0.IN9
alu_control[1] => Mux1.IN9
alu_control[1] => Mux2.IN9
alu_control[1] => Mux3.IN9
alu_control[2] => Mux0.IN8
alu_control[2] => Mux1.IN8
alu_control[2] => Mux2.IN8
alu_control[2] => Mux3.IN8
alu_result[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
alu_result[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
alu_result[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
alu_result[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
zero <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


